!function(a) {
    "use strict";
    "function" == typeof define && define.amd ? define([ "jquery" ], a) : "undefined" != typeof exports ? module.exports = a(require("jquery")) : a(jQuery);
}(function(a) {
    "use strict";
    var b = window.Slick || {};
    b = function() {
        function b(b, d) {
            var e, f = this;
            f.defaults = {
                accessibility: !0,
                adaptiveHeight: !1,
                appendArrows: a(b),
                appendDots: a(b),
                arrows: !0,
                asNavFor: null,
                prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',
                nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',
                autoplay: !1,
                autoplaySpeed: 3e3,
                centerMode: !1,
                centerPadding: "50px",
                cssEase: "ease",
                customPaging: function(b, c) {
                    return a('<button type="button" data-role="none" role="button" tabindex="0" />').text(c + 1);
                },
                dots: !1,
                dotsClass: "slick-dots",
                draggable: !0,
                easing: "linear",
                edgeFriction: .35,
                fade: !1,
                focusOnSelect: !1,
                infinite: !0,
                initialSlide: 0,
                lazyLoad: "ondemand",
                mobileFirst: !1,
                pauseOnHover: !0,
                pauseOnFocus: !0,
                pauseOnDotsHover: !1,
                respondTo: "window",
                responsive: null,
                rows: 1,
                rtl: !1,
                slide: "",
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: !0,
                swipeToSlide: !1,
                touchMove: !0,
                touchThreshold: 5,
                useCSS: !0,
                useTransform: !0,
                variableWidth: !1,
                vertical: !1,
                verticalSwiping: !1,
                waitForAnimate: !0,
                zIndex: 1e3
            }, f.initials = {
                animating: !1,
                dragging: !1,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: !1,
                slideOffset: 0,
                swipeLeft: null,
                $list: null,
                touchObject: {},
                transformsEnabled: !1,
                unslicked: !1
            }, a.extend(f, f.initials), f.activeBreakpoint = null, f.animType = null, f.animProp = null, 
            f.breakpoints = [], f.breakpointSettings = [], f.cssTransitions = !1, f.focussed = !1, 
            f.interrupted = !1, f.hidden = "hidden", f.paused = !0, f.positionProp = null, f.respondTo = null, 
            f.rowCount = 1, f.shouldClick = !0, f.$slider = a(b), f.$slidesCache = null, f.transformType = null, 
            f.transitionType = null, f.visibilityChange = "visibilitychange", f.windowWidth = 0, 
            f.windowTimer = null, e = a(b).data("slick") || {}, f.options = a.extend({}, f.defaults, d, e), 
            f.currentSlide = f.options.initialSlide, f.originalSettings = f.options, "undefined" != typeof document.mozHidden ? (f.hidden = "mozHidden", 
            f.visibilityChange = "mozvisibilitychange") : "undefined" != typeof document.webkitHidden && (f.hidden = "webkitHidden", 
            f.visibilityChange = "webkitvisibilitychange"), f.autoPlay = a.proxy(f.autoPlay, f), 
            f.autoPlayClear = a.proxy(f.autoPlayClear, f), f.autoPlayIterator = a.proxy(f.autoPlayIterator, f), 
            f.changeSlide = a.proxy(f.changeSlide, f), f.clickHandler = a.proxy(f.clickHandler, f), 
            f.selectHandler = a.proxy(f.selectHandler, f), f.setPosition = a.proxy(f.setPosition, f), 
            f.swipeHandler = a.proxy(f.swipeHandler, f), f.dragHandler = a.proxy(f.dragHandler, f), 
            f.keyHandler = a.proxy(f.keyHandler, f), f.instanceUid = c++, f.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, 
            f.registerBreakpoints(), f.init(!0);
        }
        var c = 0;
        return b;
    }(), b.prototype.activateADA = function() {
        var a = this;
        a.$slideTrack.find(".slick-active").attr({
            "aria-hidden": "false"
        }).find("a, input, button, select").attr({
            tabindex: "0"
        });
    }, b.prototype.addSlide = b.prototype.slickAdd = function(b, c, d) {
        var e = this;
        if ("boolean" == typeof c) d = c, c = null; else if (0 > c || c >= e.slideCount) return !1;
        e.unload(), "number" == typeof c ? 0 === c && 0 === e.$slides.length ? a(b).appendTo(e.$slideTrack) : d ? a(b).insertBefore(e.$slides.eq(c)) : a(b).insertAfter(e.$slides.eq(c)) : d === !0 ? a(b).prependTo(e.$slideTrack) : a(b).appendTo(e.$slideTrack), 
        e.$slides = e.$slideTrack.children(this.options.slide), e.$slideTrack.children(this.options.slide).detach(), 
        e.$slideTrack.append(e.$slides), e.$slides.each(function(b, c) {
            a(c).attr("data-slick-index", b);
        }), e.$slidesCache = e.$slides, e.reinit();
    }, b.prototype.animateHeight = function() {
        var a = this;
        if (1 === a.options.slidesToShow && a.options.adaptiveHeight === !0 && a.options.vertical === !1) {
            var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
            a.$list.animate({
                height: b
            }, a.options.speed);
        }
    }, b.prototype.animateSlide = function(b, c) {
        var d = {}, e = this;
        e.animateHeight(), e.options.rtl === !0 && e.options.vertical === !1 && (b = -b), 
        e.transformsEnabled === !1 ? e.options.vertical === !1 ? e.$slideTrack.animate({
            left: b
        }, e.options.speed, e.options.easing, c) : e.$slideTrack.animate({
            top: b
        }, e.options.speed, e.options.easing, c) : e.cssTransitions === !1 ? (e.options.rtl === !0 && (e.currentLeft = -e.currentLeft), 
        a({
            animStart: e.currentLeft
        }).animate({
            animStart: b
        }, {
            duration: e.options.speed,
            easing: e.options.easing,
            step: function(a) {
                a = Math.ceil(a), e.options.vertical === !1 ? (d[e.animType] = "translate(" + a + "px, 0px)", 
                e.$slideTrack.css(d)) : (d[e.animType] = "translate(0px," + a + "px)", e.$slideTrack.css(d));
            },
            complete: function() {
                c && c.call();
            }
        })) : (e.applyTransition(), b = Math.ceil(b), e.options.vertical === !1 ? d[e.animType] = "translate3d(" + b + "px, 0px, 0px)" : d[e.animType] = "translate3d(0px," + b + "px, 0px)", 
        e.$slideTrack.css(d), c && setTimeout(function() {
            e.disableTransition(), c.call();
        }, e.options.speed));
    }, b.prototype.getNavTarget = function() {
        var b = this, c = b.options.asNavFor;
        return c && null !== c && (c = a(c).not(b.$slider)), c;
    }, b.prototype.asNavFor = function(b) {
        var c = this, d = c.getNavTarget();
        null !== d && "object" == typeof d && d.each(function() {
            var c = a(this).slick("getSlick");
            c.unslicked || c.slideHandler(b, !0);
        });
    }, b.prototype.applyTransition = function(a) {
        var b = this, c = {};
        b.options.fade === !1 ? c[b.transitionType] = b.transformType + " " + b.options.speed + "ms " + b.options.cssEase : c[b.transitionType] = "opacity " + b.options.speed + "ms " + b.options.cssEase, 
        b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c);
    }, b.prototype.autoPlay = function() {
        var a = this;
        a.autoPlayClear(), a.slideCount > a.options.slidesToShow && (a.autoPlayTimer = setInterval(a.autoPlayIterator, a.options.autoplaySpeed));
    }, b.prototype.autoPlayClear = function() {
        var a = this;
        a.autoPlayTimer && clearInterval(a.autoPlayTimer);
    }, b.prototype.autoPlayIterator = function() {
        var a = this, b = a.currentSlide + a.options.slidesToScroll;
        a.paused || a.interrupted || a.focussed || (a.options.infinite === !1 && (1 === a.direction && a.currentSlide + 1 === a.slideCount - 1 ? a.direction = 0 : 0 === a.direction && (b = a.currentSlide - a.options.slidesToScroll, 
        a.currentSlide - 1 === 0 && (a.direction = 1))), a.slideHandler(b));
    }, b.prototype.buildArrows = function() {
        var b = this;
        b.options.arrows === !0 && (b.$prevArrow = a(b.options.prevArrow).addClass("slick-arrow"), 
        b.$nextArrow = a(b.options.nextArrow).addClass("slick-arrow"), b.slideCount > b.options.slidesToShow ? (b.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), 
        b.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), b.htmlExpr.test(b.options.prevArrow) && b.$prevArrow.prependTo(b.options.appendArrows), 
        b.htmlExpr.test(b.options.nextArrow) && b.$nextArrow.appendTo(b.options.appendArrows), 
        b.options.infinite !== !0 && b.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : b.$prevArrow.add(b.$nextArrow).addClass("slick-hidden").attr({
            "aria-disabled": "true",
            tabindex: "-1"
        }));
    }, b.prototype.buildDots = function() {
        var b, c, d = this;
        if (d.options.dots === !0 && d.slideCount > d.options.slidesToShow) {
            for (d.$slider.addClass("slick-dotted"), c = a("<ul />").addClass(d.options.dotsClass), 
            b = 0; b <= d.getDotCount(); b += 1) c.append(a("<li />").append(d.options.customPaging.call(this, d, b)));
            d.$dots = c.appendTo(d.options.appendDots), d.$dots.find("li").first().addClass("slick-active").attr("aria-hidden", "false");
        }
    }, b.prototype.buildOut = function() {
        var b = this;
        b.$slides = b.$slider.children(b.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), 
        b.slideCount = b.$slides.length, b.$slides.each(function(b, c) {
            a(c).attr("data-slick-index", b).data("originalStyling", a(c).attr("style") || "");
        }), b.$slider.addClass("slick-slider"), b.$slideTrack = 0 === b.slideCount ? a('<div class="slick-track"/>').appendTo(b.$slider) : b.$slides.wrapAll('<div class="slick-track"/>').parent(), 
        b.$list = b.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(), 
        b.$slideTrack.css("opacity", 0), (b.options.centerMode === !0 || b.options.swipeToSlide === !0) && (b.options.slidesToScroll = 1), 
        a("img[data-lazy]", b.$slider).not("[src]").addClass("slick-loading"), b.setupInfinite(), 
        b.buildArrows(), b.buildDots(), b.updateDots(), b.setSlideClasses("number" == typeof b.currentSlide ? b.currentSlide : 0), 
        b.options.draggable === !0 && b.$list.addClass("draggable");
    }, b.prototype.buildRows = function() {
        var a, b, c, d, e, f, g, h = this;
        if (d = document.createDocumentFragment(), f = h.$slider.children(), h.options.rows > 1) {
            for (g = h.options.slidesPerRow * h.options.rows, e = Math.ceil(f.length / g), a = 0; e > a; a++) {
                var i = document.createElement("div");
                for (b = 0; b < h.options.rows; b++) {
                    var j = document.createElement("div");
                    for (c = 0; c < h.options.slidesPerRow; c++) {
                        var k = a * g + (b * h.options.slidesPerRow + c);
                        f.get(k) && j.appendChild(f.get(k));
                    }
                    i.appendChild(j);
                }
                d.appendChild(i);
            }
            h.$slider.empty().append(d), h.$slider.children().children().children().css({
                width: 100 / h.options.slidesPerRow + "%",
                display: "inline-block"
            });
        }
    }, b.prototype.checkResponsive = function(b, c) {
        var d, e, f, g = this, h = !1, i = g.$slider.width(), j = window.innerWidth || a(window).width();
        if ("window" === g.respondTo ? f = j : "slider" === g.respondTo ? f = i : "min" === g.respondTo && (f = Math.min(j, i)), 
        g.options.responsive && g.options.responsive.length && null !== g.options.responsive) {
            e = null;
            for (d in g.breakpoints) g.breakpoints.hasOwnProperty(d) && (g.originalSettings.mobileFirst === !1 ? f < g.breakpoints[d] && (e = g.breakpoints[d]) : f > g.breakpoints[d] && (e = g.breakpoints[d]));
            null !== e ? null !== g.activeBreakpoint ? (e !== g.activeBreakpoint || c) && (g.activeBreakpoint = e, 
            "unslick" === g.breakpointSettings[e] ? g.unslick(e) : (g.options = a.extend({}, g.originalSettings, g.breakpointSettings[e]), 
            b === !0 && (g.currentSlide = g.options.initialSlide), g.refresh(b)), h = e) : (g.activeBreakpoint = e, 
            "unslick" === g.breakpointSettings[e] ? g.unslick(e) : (g.options = a.extend({}, g.originalSettings, g.breakpointSettings[e]), 
            b === !0 && (g.currentSlide = g.options.initialSlide), g.refresh(b)), h = e) : null !== g.activeBreakpoint && (g.activeBreakpoint = null, 
            g.options = g.originalSettings, b === !0 && (g.currentSlide = g.options.initialSlide), 
            g.refresh(b), h = e), b || h === !1 || g.$slider.trigger("breakpoint", [ g, h ]);
        }
    }, b.prototype.changeSlide = function(b, c) {
        var d, e, f, g = this, h = a(b.currentTarget);
        switch (h.is("a") && b.preventDefault(), h.is("li") || (h = h.closest("li")), f = g.slideCount % g.options.slidesToScroll !== 0, 
        d = f ? 0 : (g.slideCount - g.currentSlide) % g.options.slidesToScroll, b.data.message) {
          case "previous":
            e = 0 === d ? g.options.slidesToScroll : g.options.slidesToShow - d, g.slideCount > g.options.slidesToShow && g.slideHandler(g.currentSlide - e, !1, c);
            break;

          case "next":
            e = 0 === d ? g.options.slidesToScroll : d, g.slideCount > g.options.slidesToShow && g.slideHandler(g.currentSlide + e, !1, c);
            break;

          case "index":
            var i = 0 === b.data.index ? 0 : b.data.index || h.index() * g.options.slidesToScroll;
            g.slideHandler(g.checkNavigable(i), !1, c), h.children().trigger("focus");
            break;

          default:
            return;
        }
    }, b.prototype.checkNavigable = function(a) {
        var b, c, d = this;
        if (b = d.getNavigableIndexes(), c = 0, a > b[b.length - 1]) a = b[b.length - 1]; else for (var e in b) {
            if (a < b[e]) {
                a = c;
                break;
            }
            c = b[e];
        }
        return a;
    }, b.prototype.cleanUpEvents = function() {
        var b = this;
        b.options.dots && null !== b.$dots && a("li", b.$dots).off("click.slick", b.changeSlide).off("mouseenter.slick", a.proxy(b.interrupt, b, !0)).off("mouseleave.slick", a.proxy(b.interrupt, b, !1)), 
        b.$slider.off("focus.slick blur.slick"), b.options.arrows === !0 && b.slideCount > b.options.slidesToShow && (b.$prevArrow && b.$prevArrow.off("click.slick", b.changeSlide), 
        b.$nextArrow && b.$nextArrow.off("click.slick", b.changeSlide)), b.$list.off("touchstart.slick mousedown.slick", b.swipeHandler), 
        b.$list.off("touchmove.slick mousemove.slick", b.swipeHandler), b.$list.off("touchend.slick mouseup.slick", b.swipeHandler), 
        b.$list.off("touchcancel.slick mouseleave.slick", b.swipeHandler), b.$list.off("click.slick", b.clickHandler), 
        a(document).off(b.visibilityChange, b.visibility), b.cleanUpSlideEvents(), b.options.accessibility === !0 && b.$list.off("keydown.slick", b.keyHandler), 
        b.options.focusOnSelect === !0 && a(b.$slideTrack).children().off("click.slick", b.selectHandler), 
        a(window).off("orientationchange.slick.slick-" + b.instanceUid, b.orientationChange), 
        a(window).off("resize.slick.slick-" + b.instanceUid, b.resize), a("[draggable!=true]", b.$slideTrack).off("dragstart", b.preventDefault), 
        a(window).off("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).off("ready.slick.slick-" + b.instanceUid, b.setPosition);
    }, b.prototype.cleanUpSlideEvents = function() {
        var b = this;
        b.$list.off("mouseenter.slick", a.proxy(b.interrupt, b, !0)), b.$list.off("mouseleave.slick", a.proxy(b.interrupt, b, !1));
    }, b.prototype.cleanUpRows = function() {
        var a, b = this;
        b.options.rows > 1 && (a = b.$slides.children().children(), a.removeAttr("style"), 
        b.$slider.empty().append(a));
    }, b.prototype.clickHandler = function(a) {
        var b = this;
        b.shouldClick === !1 && (a.stopImmediatePropagation(), a.stopPropagation(), a.preventDefault());
    }, b.prototype.destroy = function(b) {
        var c = this;
        c.autoPlayClear(), c.touchObject = {}, c.cleanUpEvents(), a(".slick-cloned", c.$slider).detach(), 
        c.$dots && c.$dots.remove(), c.$prevArrow && c.$prevArrow.length && (c.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        c.htmlExpr.test(c.options.prevArrow) && c.$prevArrow.remove()), c.$nextArrow && c.$nextArrow.length && (c.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        c.htmlExpr.test(c.options.nextArrow) && c.$nextArrow.remove()), c.$slides && (c.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function() {
            a(this).attr("style", a(this).data("originalStyling"));
        }), c.$slideTrack.children(this.options.slide).detach(), c.$slideTrack.detach(), 
        c.$list.detach(), c.$slider.append(c.$slides)), c.cleanUpRows(), c.$slider.removeClass("slick-slider"), 
        c.$slider.removeClass("slick-initialized"), c.$slider.removeClass("slick-dotted"), 
        c.unslicked = !0, b || c.$slider.trigger("destroy", [ c ]);
    }, b.prototype.disableTransition = function(a) {
        var b = this, c = {};
        c[b.transitionType] = "", b.options.fade === !1 ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c);
    }, b.prototype.fadeSlide = function(a, b) {
        var c = this;
        c.cssTransitions === !1 ? (c.$slides.eq(a).css({
            zIndex: c.options.zIndex
        }), c.$slides.eq(a).animate({
            opacity: 1
        }, c.options.speed, c.options.easing, b)) : (c.applyTransition(a), c.$slides.eq(a).css({
            opacity: 1,
            zIndex: c.options.zIndex
        }), b && setTimeout(function() {
            c.disableTransition(a), b.call();
        }, c.options.speed));
    }, b.prototype.fadeSlideOut = function(a) {
        var b = this;
        b.cssTransitions === !1 ? b.$slides.eq(a).animate({
            opacity: 0,
            zIndex: b.options.zIndex - 2
        }, b.options.speed, b.options.easing) : (b.applyTransition(a), b.$slides.eq(a).css({
            opacity: 0,
            zIndex: b.options.zIndex - 2
        }));
    }, b.prototype.filterSlides = b.prototype.slickFilter = function(a) {
        var b = this;
        null !== a && (b.$slidesCache = b.$slides, b.unload(), b.$slideTrack.children(this.options.slide).detach(), 
        b.$slidesCache.filter(a).appendTo(b.$slideTrack), b.reinit());
    }, b.prototype.focusHandler = function() {
        var b = this;
        b.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*:not(.slick-arrow)", function(c) {
            c.stopImmediatePropagation();
            var d = a(this);
            setTimeout(function() {
                b.options.pauseOnFocus && (b.focussed = d.is(":focus"), b.autoPlay());
            }, 0);
        });
    }, b.prototype.getCurrent = b.prototype.slickCurrentSlide = function() {
        var a = this;
        return a.currentSlide;
    }, b.prototype.getDotCount = function() {
        var a = this, b = 0, c = 0, d = 0;
        if (a.options.infinite === !0) for (;b < a.slideCount; ) ++d, b = c + a.options.slidesToScroll, 
        c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow; else if (a.options.centerMode === !0) d = a.slideCount; else if (a.options.asNavFor) for (;b < a.slideCount; ) ++d, 
        b = c + a.options.slidesToScroll, c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow; else d = 1 + Math.ceil((a.slideCount - a.options.slidesToShow) / a.options.slidesToScroll);
        return d - 1;
    }, b.prototype.getLeft = function(a) {
        var b, c, d, e = this, f = 0;
        return e.slideOffset = 0, c = e.$slides.first().outerHeight(!0), e.options.infinite === !0 ? (e.slideCount > e.options.slidesToShow && (e.slideOffset = e.slideWidth * e.options.slidesToShow * -1, 
        f = c * e.options.slidesToShow * -1), e.slideCount % e.options.slidesToScroll !== 0 && a + e.options.slidesToScroll > e.slideCount && e.slideCount > e.options.slidesToShow && (a > e.slideCount ? (e.slideOffset = (e.options.slidesToShow - (a - e.slideCount)) * e.slideWidth * -1, 
        f = (e.options.slidesToShow - (a - e.slideCount)) * c * -1) : (e.slideOffset = e.slideCount % e.options.slidesToScroll * e.slideWidth * -1, 
        f = e.slideCount % e.options.slidesToScroll * c * -1))) : a + e.options.slidesToShow > e.slideCount && (e.slideOffset = (a + e.options.slidesToShow - e.slideCount) * e.slideWidth, 
        f = (a + e.options.slidesToShow - e.slideCount) * c), e.slideCount <= e.options.slidesToShow && (e.slideOffset = 0, 
        f = 0), e.options.centerMode === !0 && e.options.infinite === !0 ? e.slideOffset += e.slideWidth * Math.floor(e.options.slidesToShow / 2) - e.slideWidth : e.options.centerMode === !0 && (e.slideOffset = 0, 
        e.slideOffset += e.slideWidth * Math.floor(e.options.slidesToShow / 2)), b = e.options.vertical === !1 ? a * e.slideWidth * -1 + e.slideOffset : a * c * -1 + f, 
        e.options.variableWidth === !0 && (d = e.slideCount <= e.options.slidesToShow || e.options.infinite === !1 ? e.$slideTrack.children(".slick-slide").eq(a) : e.$slideTrack.children(".slick-slide").eq(a + e.options.slidesToShow), 
        b = e.options.rtl === !0 ? d[0] ? -1 * (e.$slideTrack.width() - d[0].offsetLeft - d.width()) : 0 : d[0] ? -1 * d[0].offsetLeft : 0, 
        e.options.centerMode === !0 && (d = e.slideCount <= e.options.slidesToShow || e.options.infinite === !1 ? e.$slideTrack.children(".slick-slide").eq(a) : e.$slideTrack.children(".slick-slide").eq(a + e.options.slidesToShow + 1), 
        b = e.options.rtl === !0 ? d[0] ? -1 * (e.$slideTrack.width() - d[0].offsetLeft - d.width()) : 0 : d[0] ? -1 * d[0].offsetLeft : 0, 
        b += (e.$list.width() - d.outerWidth()) / 2)), b;
    }, b.prototype.getOption = b.prototype.slickGetOption = function(a) {
        var b = this;
        return b.options[a];
    }, b.prototype.getNavigableIndexes = function() {
        var a, b = this, c = 0, d = 0, e = [];
        for (b.options.infinite === !1 ? a = b.slideCount : (c = -1 * b.options.slidesToScroll, 
        d = -1 * b.options.slidesToScroll, a = 2 * b.slideCount); a > c; ) e.push(c), c = d + b.options.slidesToScroll, 
        d += b.options.slidesToScroll <= b.options.slidesToShow ? b.options.slidesToScroll : b.options.slidesToShow;
        return e;
    }, b.prototype.getSlick = function() {
        return this;
    }, b.prototype.getSlideCount = function() {
        var b, c, d, e = this;
        return d = e.options.centerMode === !0 ? e.slideWidth * Math.floor(e.options.slidesToShow / 2) : 0, 
        e.options.swipeToSlide === !0 ? (e.$slideTrack.find(".slick-slide").each(function(b, f) {
            return f.offsetLeft - d + a(f).outerWidth() / 2 > -1 * e.swipeLeft ? (c = f, !1) : void 0;
        }), b = Math.abs(a(c).attr("data-slick-index") - e.currentSlide) || 1) : e.options.slidesToScroll;
    }, b.prototype.goTo = b.prototype.slickGoTo = function(a, b) {
        var c = this;
        c.changeSlide({
            data: {
                message: "index",
                index: parseInt(a)
            }
        }, b);
    }, b.prototype.init = function(b) {
        var c = this;
        a(c.$slider).hasClass("slick-initialized") || (a(c.$slider).addClass("slick-initialized"), 
        c.buildRows(), c.buildOut(), c.setProps(), c.startLoad(), c.loadSlider(), c.initializeEvents(), 
        c.updateArrows(), c.updateDots(), c.checkResponsive(!0), c.focusHandler()), b && c.$slider.trigger("init", [ c ]), 
        c.options.accessibility === !0 && c.initADA(), c.options.autoplay && (c.paused = !1, 
        c.autoPlay());
    }, b.prototype.initADA = function() {
        var b = this;
        b.$slides.add(b.$slideTrack.find(".slick-cloned")).attr({
            "aria-hidden": "true",
            tabindex: "-1"
        }).find("a, input, button, select").attr({
            tabindex: "-1"
        }), b.$slideTrack.attr("role", "listbox"), b.$slides.not(b.$slideTrack.find(".slick-cloned")).each(function(c) {
            a(this).attr({
                role: "option",
                "aria-describedby": "slick-slide" + b.instanceUid + c
            });
        }), null !== b.$dots && b.$dots.attr("role", "tablist").find("li").each(function(c) {
            a(this).attr({
                role: "presentation",
                "aria-selected": "false",
                "aria-controls": "navigation" + b.instanceUid + c,
                id: "slick-slide" + b.instanceUid + c
            });
        }).first().attr("aria-selected", "true").end().find("button").attr("role", "button").end().closest("div").attr("role", "toolbar"), 
        b.activateADA();
    }, b.prototype.initArrowEvents = function() {
        var a = this;
        a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.off("click.slick").on("click.slick", {
            message: "previous"
        }, a.changeSlide), a.$nextArrow.off("click.slick").on("click.slick", {
            message: "next"
        }, a.changeSlide));
    }, b.prototype.initDotEvents = function() {
        var b = this;
        b.options.dots === !0 && b.slideCount > b.options.slidesToShow && a("li", b.$dots).on("click.slick", {
            message: "index"
        }, b.changeSlide), b.options.dots === !0 && b.options.pauseOnDotsHover === !0 && a("li", b.$dots).on("mouseenter.slick", a.proxy(b.interrupt, b, !0)).on("mouseleave.slick", a.proxy(b.interrupt, b, !1));
    }, b.prototype.initSlideEvents = function() {
        var b = this;
        b.options.pauseOnHover && (b.$list.on("mouseenter.slick", a.proxy(b.interrupt, b, !0)), 
        b.$list.on("mouseleave.slick", a.proxy(b.interrupt, b, !1)));
    }, b.prototype.initializeEvents = function() {
        var b = this;
        b.initArrowEvents(), b.initDotEvents(), b.initSlideEvents(), b.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, b.swipeHandler), b.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, b.swipeHandler), b.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, b.swipeHandler), b.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, b.swipeHandler), b.$list.on("click.slick", b.clickHandler), a(document).on(b.visibilityChange, a.proxy(b.visibility, b)), 
        b.options.accessibility === !0 && b.$list.on("keydown.slick", b.keyHandler), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().on("click.slick", b.selectHandler), 
        a(window).on("orientationchange.slick.slick-" + b.instanceUid, a.proxy(b.orientationChange, b)), 
        a(window).on("resize.slick.slick-" + b.instanceUid, a.proxy(b.resize, b)), a("[draggable!=true]", b.$slideTrack).on("dragstart", b.preventDefault), 
        a(window).on("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).on("ready.slick.slick-" + b.instanceUid, b.setPosition);
    }, b.prototype.initUI = function() {
        var a = this;
        a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.show(), 
        a.$nextArrow.show()), a.options.dots === !0 && a.slideCount > a.options.slidesToShow && a.$dots.show();
    }, b.prototype.keyHandler = function(a) {
        var b = this;
        a.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === a.keyCode && b.options.accessibility === !0 ? b.changeSlide({
            data: {
                message: b.options.rtl === !0 ? "next" : "previous"
            }
        }) : 39 === a.keyCode && b.options.accessibility === !0 && b.changeSlide({
            data: {
                message: b.options.rtl === !0 ? "previous" : "next"
            }
        }));
    }, b.prototype.lazyLoad = function() {
        function b(b) {
            a("img[data-lazy]", b).each(function() {
                var b = a(this), c = a(this).attr("data-lazy"), d = document.createElement("img");
                d.onload = function() {
                    b.animate({
                        opacity: 0
                    }, 100, function() {
                        b.attr("src", c).animate({
                            opacity: 1
                        }, 200, function() {
                            b.removeAttr("data-lazy").removeClass("slick-loading");
                        }), g.$slider.trigger("lazyLoaded", [ g, b, c ]);
                    });
                }, d.onerror = function() {
                    b.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
                    g.$slider.trigger("lazyLoadError", [ g, b, c ]);
                }, d.src = c;
            });
        }
        var c, d, e, f, g = this;
        g.options.centerMode === !0 ? g.options.infinite === !0 ? (e = g.currentSlide + (g.options.slidesToShow / 2 + 1), 
        f = e + g.options.slidesToShow + 2) : (e = Math.max(0, g.currentSlide - (g.options.slidesToShow / 2 + 1)), 
        f = 2 + (g.options.slidesToShow / 2 + 1) + g.currentSlide) : (e = g.options.infinite ? g.options.slidesToShow + g.currentSlide : g.currentSlide, 
        f = Math.ceil(e + g.options.slidesToShow), g.options.fade === !0 && (e > 0 && e--, 
        f <= g.slideCount && f++)), c = g.$slider.find(".slick-slide").slice(e, f), b(c), 
        g.slideCount <= g.options.slidesToShow ? (d = g.$slider.find(".slick-slide"), b(d)) : g.currentSlide >= g.slideCount - g.options.slidesToShow ? (d = g.$slider.find(".slick-cloned").slice(0, g.options.slidesToShow), 
        b(d)) : 0 === g.currentSlide && (d = g.$slider.find(".slick-cloned").slice(-1 * g.options.slidesToShow), 
        b(d));
    }, b.prototype.loadSlider = function() {
        var a = this;
        a.setPosition(), a.$slideTrack.css({
            opacity: 1
        }), a.$slider.removeClass("slick-loading"), a.initUI(), "progressive" === a.options.lazyLoad && a.progressiveLazyLoad();
    }, b.prototype.next = b.prototype.slickNext = function() {
        var a = this;
        a.changeSlide({
            data: {
                message: "next"
            }
        });
    }, b.prototype.orientationChange = function() {
        var a = this;
        a.checkResponsive(), a.setPosition();
    }, b.prototype.pause = b.prototype.slickPause = function() {
        var a = this;
        a.autoPlayClear(), a.paused = !0;
    }, b.prototype.play = b.prototype.slickPlay = function() {
        var a = this;
        a.autoPlay(), a.options.autoplay = !0, a.paused = !1, a.focussed = !1, a.interrupted = !1;
    }, b.prototype.postSlide = function(a) {
        var b = this;
        b.unslicked || (b.$slider.trigger("afterChange", [ b, a ]), b.animating = !1, b.setPosition(), 
        b.swipeLeft = null, b.options.autoplay && b.autoPlay(), b.options.accessibility === !0 && b.initADA());
    }, b.prototype.prev = b.prototype.slickPrev = function() {
        var a = this;
        a.changeSlide({
            data: {
                message: "previous"
            }
        });
    }, b.prototype.preventDefault = function(a) {
        a.preventDefault();
    }, b.prototype.progressiveLazyLoad = function(b) {
        b = b || 1;
        var c, d, e, f = this, g = a("img[data-lazy]", f.$slider);
        g.length ? (c = g.first(), d = c.attr("data-lazy"), e = document.createElement("img"), 
        e.onload = function() {
            c.attr("src", d).removeAttr("data-lazy").removeClass("slick-loading"), f.options.adaptiveHeight === !0 && f.setPosition(), 
            f.$slider.trigger("lazyLoaded", [ f, c, d ]), f.progressiveLazyLoad();
        }, e.onerror = function() {
            3 > b ? setTimeout(function() {
                f.progressiveLazyLoad(b + 1);
            }, 500) : (c.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
            f.$slider.trigger("lazyLoadError", [ f, c, d ]), f.progressiveLazyLoad());
        }, e.src = d) : f.$slider.trigger("allImagesLoaded", [ f ]);
    }, b.prototype.refresh = function(b) {
        var c, d, e = this;
        d = e.slideCount - e.options.slidesToShow, !e.options.infinite && e.currentSlide > d && (e.currentSlide = d), 
        e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0), c = e.currentSlide, 
        e.destroy(!0), a.extend(e, e.initials, {
            currentSlide: c
        }), e.init(), b || e.changeSlide({
            data: {
                message: "index",
                index: c
            }
        }, !1);
    }, b.prototype.registerBreakpoints = function() {
        var b, c, d, e = this, f = e.options.responsive || null;
        if ("array" === a.type(f) && f.length) {
            e.respondTo = e.options.respondTo || "window";
            for (b in f) if (d = e.breakpoints.length - 1, c = f[b].breakpoint, f.hasOwnProperty(b)) {
                for (;d >= 0; ) e.breakpoints[d] && e.breakpoints[d] === c && e.breakpoints.splice(d, 1), 
                d--;
                e.breakpoints.push(c), e.breakpointSettings[c] = f[b].settings;
            }
            e.breakpoints.sort(function(a, b) {
                return e.options.mobileFirst ? a - b : b - a;
            });
        }
    }, b.prototype.reinit = function() {
        var b = this;
        b.$slides = b.$slideTrack.children(b.options.slide).addClass("slick-slide"), b.slideCount = b.$slides.length, 
        b.currentSlide >= b.slideCount && 0 !== b.currentSlide && (b.currentSlide = b.currentSlide - b.options.slidesToScroll), 
        b.slideCount <= b.options.slidesToShow && (b.currentSlide = 0), b.registerBreakpoints(), 
        b.setProps(), b.setupInfinite(), b.buildArrows(), b.updateArrows(), b.initArrowEvents(), 
        b.buildDots(), b.updateDots(), b.initDotEvents(), b.cleanUpSlideEvents(), b.initSlideEvents(), 
        b.checkResponsive(!1, !0), b.options.focusOnSelect === !0 && a(b.$slideTrack).children().on("click.slick", b.selectHandler), 
        b.setSlideClasses("number" == typeof b.currentSlide ? b.currentSlide : 0), b.setPosition(), 
        b.focusHandler(), b.paused = !b.options.autoplay, b.autoPlay(), b.$slider.trigger("reInit", [ b ]);
    }, b.prototype.resize = function() {
        var b = this;
        a(window).width() !== b.windowWidth && (clearTimeout(b.windowDelay), b.windowDelay = window.setTimeout(function() {
            b.windowWidth = a(window).width(), b.checkResponsive(), b.unslicked || b.setPosition();
        }, 50));
    }, b.prototype.removeSlide = b.prototype.slickRemove = function(a, b, c) {
        var d = this;
        return "boolean" == typeof a ? (b = a, a = b === !0 ? 0 : d.slideCount - 1) : a = b === !0 ? --a : a, 
        !(d.slideCount < 1 || 0 > a || a > d.slideCount - 1) && (d.unload(), c === !0 ? d.$slideTrack.children().remove() : d.$slideTrack.children(this.options.slide).eq(a).remove(), 
        d.$slides = d.$slideTrack.children(this.options.slide), d.$slideTrack.children(this.options.slide).detach(), 
        d.$slideTrack.append(d.$slides), d.$slidesCache = d.$slides, void d.reinit());
    }, b.prototype.setCSS = function(a) {
        var b, c, d = this, e = {};
        d.options.rtl === !0 && (a = -a), b = "left" == d.positionProp ? Math.ceil(a) + "px" : "0px", 
        c = "top" == d.positionProp ? Math.ceil(a) + "px" : "0px", e[d.positionProp] = a, 
        d.transformsEnabled === !1 ? d.$slideTrack.css(e) : (e = {}, d.cssTransitions === !1 ? (e[d.animType] = "translate(" + b + ", " + c + ")", 
        d.$slideTrack.css(e)) : (e[d.animType] = "translate3d(" + b + ", " + c + ", 0px)", 
        d.$slideTrack.css(e)));
    }, b.prototype.setDimensions = function() {
        var a = this;
        a.options.vertical === !1 ? a.options.centerMode === !0 && a.$list.css({
            padding: "0px " + a.options.centerPadding
        }) : (a.$list.height(a.$slides.first().outerHeight(!0) * a.options.slidesToShow), 
        a.options.centerMode === !0 && a.$list.css({
            padding: a.options.centerPadding + " 0px"
        })), a.listWidth = a.$list.width(), a.listHeight = a.$list.height(), a.options.vertical === !1 && a.options.variableWidth === !1 ? (a.slideWidth = Math.ceil(a.listWidth / a.options.slidesToShow), 
        a.$slideTrack.width(Math.ceil(a.slideWidth * a.$slideTrack.children(".slick-slide").length))) : a.options.variableWidth === !0 ? a.$slideTrack.width(5e3 * a.slideCount) : (a.slideWidth = Math.ceil(a.listWidth), 
        a.$slideTrack.height(Math.ceil(a.$slides.first().outerHeight(!0) * a.$slideTrack.children(".slick-slide").length)));
        var b = a.$slides.first().outerWidth(!0) - a.$slides.first().width();
        a.options.variableWidth === !1 && a.$slideTrack.children(".slick-slide").width(a.slideWidth - b);
    }, b.prototype.setFade = function() {
        var b, c = this;
        c.$slides.each(function(d, e) {
            b = c.slideWidth * d * -1, c.options.rtl === !0 ? a(e).css({
                position: "relative",
                right: b,
                top: 0,
                zIndex: c.options.zIndex - 2,
                opacity: 0
            }) : a(e).css({
                position: "relative",
                left: b,
                top: 0,
                zIndex: c.options.zIndex - 2,
                opacity: 0
            });
        }), c.$slides.eq(c.currentSlide).css({
            zIndex: c.options.zIndex - 1,
            opacity: 1
        });
    }, b.prototype.setHeight = function() {
        var a = this;
        if (1 === a.options.slidesToShow && a.options.adaptiveHeight === !0 && a.options.vertical === !1) {
            var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
            a.$list.css("height", b);
        }
    }, b.prototype.setOption = b.prototype.slickSetOption = function() {
        var b, c, d, e, f, g = this, h = !1;
        if ("object" === a.type(arguments[0]) ? (d = arguments[0], h = arguments[1], f = "multiple") : "string" === a.type(arguments[0]) && (d = arguments[0], 
        e = arguments[1], h = arguments[2], "responsive" === arguments[0] && "array" === a.type(arguments[1]) ? f = "responsive" : "undefined" != typeof arguments[1] && (f = "single")), 
        "single" === f) g.options[d] = e; else if ("multiple" === f) a.each(d, function(a, b) {
            g.options[a] = b;
        }); else if ("responsive" === f) for (c in e) if ("array" !== a.type(g.options.responsive)) g.options.responsive = [ e[c] ]; else {
            for (b = g.options.responsive.length - 1; b >= 0; ) g.options.responsive[b].breakpoint === e[c].breakpoint && g.options.responsive.splice(b, 1), 
            b--;
            g.options.responsive.push(e[c]);
        }
        h && (g.unload(), g.reinit());
    }, b.prototype.setPosition = function() {
        var a = this;
        a.setDimensions(), a.setHeight(), a.options.fade === !1 ? a.setCSS(a.getLeft(a.currentSlide)) : a.setFade(), 
        a.$slider.trigger("setPosition", [ a ]);
    }, b.prototype.setProps = function() {
        var a = this, b = document.body.style;
        a.positionProp = a.options.vertical === !0 ? "top" : "left", "top" === a.positionProp ? a.$slider.addClass("slick-vertical") : a.$slider.removeClass("slick-vertical"), 
        (void 0 !== b.WebkitTransition || void 0 !== b.MozTransition || void 0 !== b.msTransition) && a.options.useCSS === !0 && (a.cssTransitions = !0), 
        a.options.fade && ("number" == typeof a.options.zIndex ? a.options.zIndex < 3 && (a.options.zIndex = 3) : a.options.zIndex = a.defaults.zIndex), 
        void 0 !== b.OTransform && (a.animType = "OTransform", a.transformType = "-o-transform", 
        a.transitionType = "OTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), 
        void 0 !== b.MozTransform && (a.animType = "MozTransform", a.transformType = "-moz-transform", 
        a.transitionType = "MozTransition", void 0 === b.perspectiveProperty && void 0 === b.MozPerspective && (a.animType = !1)), 
        void 0 !== b.webkitTransform && (a.animType = "webkitTransform", a.transformType = "-webkit-transform", 
        a.transitionType = "webkitTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), 
        void 0 !== b.msTransform && (a.animType = "msTransform", a.transformType = "-ms-transform", 
        a.transitionType = "msTransition", void 0 === b.msTransform && (a.animType = !1)), 
        void 0 !== b.transform && a.animType !== !1 && (a.animType = "transform", a.transformType = "transform", 
        a.transitionType = "transition"), a.transformsEnabled = a.options.useTransform && null !== a.animType && a.animType !== !1;
    }, b.prototype.setSlideClasses = function(a) {
        var b, c, d, e, f = this;
        c = f.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), 
        f.$slides.eq(a).addClass("slick-current"), f.options.centerMode === !0 ? (b = Math.floor(f.options.slidesToShow / 2), 
        f.options.infinite === !0 && (a >= b && a <= f.slideCount - 1 - b ? f.$slides.slice(a - b, a + b + 1).addClass("slick-active").attr("aria-hidden", "false") : (d = f.options.slidesToShow + a, 
        c.slice(d - b + 1, d + b + 2).addClass("slick-active").attr("aria-hidden", "false")), 
        0 === a ? c.eq(c.length - 1 - f.options.slidesToShow).addClass("slick-center") : a === f.slideCount - 1 && c.eq(f.options.slidesToShow).addClass("slick-center")), 
        f.$slides.eq(a).addClass("slick-center")) : a >= 0 && a <= f.slideCount - f.options.slidesToShow ? f.$slides.slice(a, a + f.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : c.length <= f.options.slidesToShow ? c.addClass("slick-active").attr("aria-hidden", "false") : (e = f.slideCount % f.options.slidesToShow, 
        d = f.options.infinite === !0 ? f.options.slidesToShow + a : a, f.options.slidesToShow == f.options.slidesToScroll && f.slideCount - a < f.options.slidesToShow ? c.slice(d - (f.options.slidesToShow - e), d + e).addClass("slick-active").attr("aria-hidden", "false") : c.slice(d, d + f.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false")), 
        "ondemand" === f.options.lazyLoad && f.lazyLoad();
    }, b.prototype.setupInfinite = function() {
        var b, c, d, e = this;
        if (e.options.fade === !0 && (e.options.centerMode = !1), e.options.infinite === !0 && e.options.fade === !1 && (c = null, 
        e.slideCount > e.options.slidesToShow)) {
            for (d = e.options.centerMode === !0 ? e.options.slidesToShow + 1 : e.options.slidesToShow, 
            b = e.slideCount; b > e.slideCount - d; b -= 1) c = b - 1, a(e.$slides[c]).clone(!0).attr("id", "").attr("data-slick-index", c - e.slideCount).prependTo(e.$slideTrack).addClass("slick-cloned");
            for (b = 0; d > b; b += 1) c = b, a(e.$slides[c]).clone(!0).attr("id", "").attr("data-slick-index", c + e.slideCount).appendTo(e.$slideTrack).addClass("slick-cloned");
            e.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                a(this).attr("id", "");
            });
        }
    }, b.prototype.interrupt = function(a) {
        var b = this;
        a || b.autoPlay(), b.interrupted = a;
    }, b.prototype.selectHandler = function(b) {
        var c = this, d = a(b.target).is(".slick-slide") ? a(b.target) : a(b.target).parents(".slick-slide"), e = parseInt(d.attr("data-slick-index"));
        return e || (e = 0), c.slideCount <= c.options.slidesToShow ? (c.setSlideClasses(e), 
        void c.asNavFor(e)) : void c.slideHandler(e);
    }, b.prototype.slideHandler = function(a, b, c) {
        var d, e, f, g, h, i = null, j = this;
        return b = b || !1, j.animating === !0 && j.options.waitForAnimate === !0 || j.options.fade === !0 && j.currentSlide === a || j.slideCount <= j.options.slidesToShow ? void 0 : (b === !1 && j.asNavFor(a), 
        d = a, i = j.getLeft(d), g = j.getLeft(j.currentSlide), j.currentLeft = null === j.swipeLeft ? g : j.swipeLeft, 
        j.options.infinite === !1 && j.options.centerMode === !1 && (0 > a || a > j.getDotCount() * j.options.slidesToScroll) ? void (j.options.fade === !1 && (d = j.currentSlide, 
        c !== !0 ? j.animateSlide(g, function() {
            j.postSlide(d);
        }) : j.postSlide(d))) : j.options.infinite === !1 && j.options.centerMode === !0 && (0 > a || a > j.slideCount - j.options.slidesToScroll) ? void (j.options.fade === !1 && (d = j.currentSlide, 
        c !== !0 ? j.animateSlide(g, function() {
            j.postSlide(d);
        }) : j.postSlide(d))) : (j.options.autoplay && clearInterval(j.autoPlayTimer), e = 0 > d ? j.slideCount % j.options.slidesToScroll !== 0 ? j.slideCount - j.slideCount % j.options.slidesToScroll : j.slideCount + d : d >= j.slideCount ? j.slideCount % j.options.slidesToScroll !== 0 ? 0 : d - j.slideCount : d, 
        j.animating = !0, j.$slider.trigger("beforeChange", [ j, j.currentSlide, e ]), f = j.currentSlide, 
        j.currentSlide = e, j.setSlideClasses(j.currentSlide), j.options.asNavFor && (h = j.getNavTarget(), 
        h = h.slick("getSlick"), h.slideCount <= h.options.slidesToShow && h.setSlideClasses(j.currentSlide)), 
        j.updateDots(), j.updateArrows(), j.options.fade === !0 ? (c !== !0 ? (j.fadeSlideOut(f), 
        j.fadeSlide(e, function() {
            j.postSlide(e);
        })) : j.postSlide(e), void j.animateHeight()) : void (c !== !0 ? j.animateSlide(i, function() {
            j.postSlide(e);
        }) : j.postSlide(e))));
    }, b.prototype.startLoad = function() {
        var a = this;
        a.options.arrows === !0 && a.slideCount > a.options.slidesToShow && (a.$prevArrow.hide(), 
        a.$nextArrow.hide()), a.options.dots === !0 && a.slideCount > a.options.slidesToShow && a.$dots.hide(), 
        a.$slider.addClass("slick-loading");
    }, b.prototype.swipeDirection = function() {
        var a, b, c, d, e = this;
        return a = e.touchObject.startX - e.touchObject.curX, b = e.touchObject.startY - e.touchObject.curY, 
        c = Math.atan2(b, a), d = Math.round(180 * c / Math.PI), 0 > d && (d = 360 - Math.abs(d)), 
        45 >= d && d >= 0 ? e.options.rtl === !1 ? "left" : "right" : 360 >= d && d >= 315 ? e.options.rtl === !1 ? "left" : "right" : d >= 135 && 225 >= d ? e.options.rtl === !1 ? "right" : "left" : e.options.verticalSwiping === !0 ? d >= 35 && 135 >= d ? "down" : "up" : "vertical";
    }, b.prototype.swipeEnd = function(a) {
        var b, c, d = this;
        if (d.dragging = !1, d.interrupted = !1, d.shouldClick = !(d.touchObject.swipeLength > 10), 
        void 0 === d.touchObject.curX) return !1;
        if (d.touchObject.edgeHit === !0 && d.$slider.trigger("edge", [ d, d.swipeDirection() ]), 
        d.touchObject.swipeLength >= d.touchObject.minSwipe) {
            switch (c = d.swipeDirection()) {
              case "left":
              case "down":
                b = d.options.swipeToSlide ? d.checkNavigable(d.currentSlide + d.getSlideCount()) : d.currentSlide + d.getSlideCount(), 
                d.currentDirection = 0;
                break;

              case "right":
              case "up":
                b = d.options.swipeToSlide ? d.checkNavigable(d.currentSlide - d.getSlideCount()) : d.currentSlide - d.getSlideCount(), 
                d.currentDirection = 1;
            }
            "vertical" != c && (d.slideHandler(b), d.touchObject = {}, d.$slider.trigger("swipe", [ d, c ]));
        } else d.touchObject.startX !== d.touchObject.curX && (d.slideHandler(d.currentSlide), 
        d.touchObject = {});
    }, b.prototype.swipeHandler = function(a) {
        var b = this;
        if (!(b.options.swipe === !1 || "ontouchend" in document && b.options.swipe === !1 || b.options.draggable === !1 && -1 !== a.type.indexOf("mouse"))) switch (b.touchObject.fingerCount = a.originalEvent && void 0 !== a.originalEvent.touches ? a.originalEvent.touches.length : 1, 
        b.touchObject.minSwipe = b.listWidth / b.options.touchThreshold, b.options.verticalSwiping === !0 && (b.touchObject.minSwipe = b.listHeight / b.options.touchThreshold), 
        a.data.action) {
          case "start":
            b.swipeStart(a);
            break;

          case "move":
            b.swipeMove(a);
            break;

          case "end":
            b.swipeEnd(a);
        }
    }, b.prototype.swipeMove = function(a) {
        var b, c, d, e, f, g = this;
        return f = void 0 !== a.originalEvent ? a.originalEvent.touches : null, !(!g.dragging || f && 1 !== f.length) && (b = g.getLeft(g.currentSlide), 
        g.touchObject.curX = void 0 !== f ? f[0].pageX : a.clientX, g.touchObject.curY = void 0 !== f ? f[0].pageY : a.clientY, 
        g.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(g.touchObject.curX - g.touchObject.startX, 2))), 
        g.options.verticalSwiping === !0 && (g.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(g.touchObject.curY - g.touchObject.startY, 2)))), 
        c = g.swipeDirection(), "vertical" !== c ? (void 0 !== a.originalEvent && g.touchObject.swipeLength > 4 && a.preventDefault(), 
        e = (g.options.rtl === !1 ? 1 : -1) * (g.touchObject.curX > g.touchObject.startX ? 1 : -1), 
        g.options.verticalSwiping === !0 && (e = g.touchObject.curY > g.touchObject.startY ? 1 : -1), 
        d = g.touchObject.swipeLength, g.touchObject.edgeHit = !1, g.options.infinite === !1 && (0 === g.currentSlide && "right" === c || g.currentSlide >= g.getDotCount() && "left" === c) && (d = g.touchObject.swipeLength * g.options.edgeFriction, 
        g.touchObject.edgeHit = !0), g.options.vertical === !1 ? g.swipeLeft = b + d * e : g.swipeLeft = b + d * (g.$list.height() / g.listWidth) * e, 
        g.options.verticalSwiping === !0 && (g.swipeLeft = b + d * e), g.options.fade !== !0 && g.options.touchMove !== !1 && (g.animating === !0 ? (g.swipeLeft = null, 
        !1) : void g.setCSS(g.swipeLeft))) : void 0);
    }, b.prototype.swipeStart = function(a) {
        var b, c = this;
        return c.interrupted = !0, 1 !== c.touchObject.fingerCount || c.slideCount <= c.options.slidesToShow ? (c.touchObject = {}, 
        !1) : (void 0 !== a.originalEvent && void 0 !== a.originalEvent.touches && (b = a.originalEvent.touches[0]), 
        c.touchObject.startX = c.touchObject.curX = void 0 !== b ? b.pageX : a.clientX, 
        c.touchObject.startY = c.touchObject.curY = void 0 !== b ? b.pageY : a.clientY, 
        void (c.dragging = !0));
    }, b.prototype.unfilterSlides = b.prototype.slickUnfilter = function() {
        var a = this;
        null !== a.$slidesCache && (a.unload(), a.$slideTrack.children(this.options.slide).detach(), 
        a.$slidesCache.appendTo(a.$slideTrack), a.reinit());
    }, b.prototype.unload = function() {
        var b = this;
        a(".slick-cloned", b.$slider).remove(), b.$dots && b.$dots.remove(), b.$prevArrow && b.htmlExpr.test(b.options.prevArrow) && b.$prevArrow.remove(), 
        b.$nextArrow && b.htmlExpr.test(b.options.nextArrow) && b.$nextArrow.remove(), b.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "");
    }, b.prototype.unslick = function(a) {
        var b = this;
        b.$slider.trigger("unslick", [ b, a ]), b.destroy();
    }, b.prototype.updateArrows = function() {
        var a, b = this;
        a = Math.floor(b.options.slidesToShow / 2), b.options.arrows === !0 && b.slideCount > b.options.slidesToShow && !b.options.infinite && (b.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 
        b.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === b.currentSlide ? (b.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        b.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : b.currentSlide >= b.slideCount - b.options.slidesToShow && b.options.centerMode === !1 ? (b.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        b.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : b.currentSlide >= b.slideCount - 1 && b.options.centerMode === !0 && (b.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        b.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")));
    }, b.prototype.updateDots = function() {
        var a = this;
        null !== a.$dots && (a.$dots.find("li").removeClass("slick-active").attr("aria-hidden", "true"), 
        a.$dots.find("li").eq(Math.floor(a.currentSlide / a.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden", "false"));
    }, b.prototype.visibility = function() {
        var a = this;
        a.options.autoplay && (document[a.hidden] ? a.interrupted = !0 : a.interrupted = !1);
    }, a.fn.slick = function() {
        var a, c, d = this, e = arguments[0], f = Array.prototype.slice.call(arguments, 1), g = d.length;
        for (a = 0; g > a; a++) if ("object" == typeof e || "undefined" == typeof e ? d[a].slick = new b(d[a], e) : c = d[a].slick[e].apply(d[a].slick, f), 
        "undefined" != typeof c) return c;
        return d;
    };
}), !function(a, b, c, d) {
    "use strict";
    function e(b, c) {
        this.elem = b, this.options = a.extend(!0, {}, g, c), this._defaults = g, this._name = f, 
        this._namespace = f.toLowerCase(), this.props = {
            thumbs: [],
            effect: {
                provider: null,
                name: null,
                list: {
                    animate: {
                        css: "animated",
                        bounce: {
                            in: "bounceInLeft",
                            out: "bounceOutRight"
                        },
                        fade: {
                            in: "fadeIn",
                            out: "fadeOut"
                        },
                        flipX: {
                            in: "flipInX",
                            out: "flipOutX"
                        },
                        flipY: {
                            in: "flipInY",
                            out: "flipOutY"
                        },
                        fun: {
                            in: "rubberBand",
                            out: "hinge"
                        },
                        light: {
                            in: "lightSpeedIn",
                            out: "lightSpeedOut"
                        },
                        roll: {
                            in: "rollIn",
                            out: "rollOut"
                        },
                        rotate: {
                            in: "rotateIn",
                            out: "rotateOut"
                        },
                        rotateBig: {
                            in: "rotateInDownLeft",
                            out: "rotateOutUpRight"
                        },
                        sideFade: {
                            in: "fadeInLeft",
                            out: "fadeOutRight"
                        },
                        sideFadeBig: {
                            in: "fadeInLeftBig",
                            out: "fadeOutRightBig"
                        },
                        slide: {
                            in: "slideInLeft",
                            out: "slideOutRight"
                        }
                    },
                    magic: {
                        css: "magictime",
                        foolish: {
                            in: "foolishIn",
                            out: "foolishOut"
                        },
                        perspective: {
                            in: "perspectiveLeftRetourn",
                            out: "perspectiveLeft"
                        },
                        puff: {
                            in: "puffIn",
                            out: "puffOut"
                        },
                        swap: {
                            in: "swap",
                            out: "magic"
                        },
                        swash: {
                            in: "swashIn",
                            out: "swashOut"
                        },
                        tin: {
                            in: "tinLeftIn",
                            out: "tinRightOut"
                        },
                        twister: {
                            in: "twisterInDown",
                            out: "holeOut"
                        }
                    }
                }
            },
            img: {
                $elem: null,
                $overlay: null,
                to_show: this.options.first,
                timer: null
            },
            controls: {
                $wrapper: null
            },
            is_transition_supported: !1,
            plugin_status: null
        }, this._init();
    }
    var f = "desoSlide", g = {
        thumbs: null,
        thumbEvent: "click",
        imageClass: "img-responsive",
        auto: {
            load: !0,
            start: !1
        },
        first: 0,
        interval: 3e3,
        effect: {
            provider: "animate",
            name: "fade"
        },
        overlay: "always",
        controls: {
            show: !0,
            keys: !1
        },
        events: {
            onThumbClick: null,
            onThumbMouseOver: null,
            onImageShow: null,
            onImageShown: null,
            onImageHide: null,
            onImageHidden: null,
            onImageClick: null,
            onPrev: null,
            onPause: null,
            onPlay: null,
            onNext: null,
            onError: null,
            onWarning: null,
            onSuccess: null
        }
    };
    e.prototype = {
        _init: function() {
            var b = this;
            null === this.options.thumbs ? this._errorHandler("error", "The `thumbs` option doesn't exist.") : 0 === a(this.options.thumbs).length && this._errorHandler("error", "The `thumbs` selector (" + a(this.options.thumbs).selector + ") doesn't exist.");
            var c = [ "always", "hover", "none" ];
            c.indexOf(this.options.overlay) === -1 && (this._errorHandler("error", "Incorrect value for the `overlay` option. Default value is used."), 
            this.options.overlay = this._defaults.overlay), a(this.options.thumbs).each(function(c, e) {
                a(e).attr("href") !== d ? a(e).find("img").length ? (b.props.thumbs.push({
                    src: a(e).attr("href"),
                    alt: a(e).find("img").attr("alt") || null,
                    caption_title: a(e).find("img").data(b._namespace + "-caption-title") || null,
                    caption_link: a(e).find("img").data(b._namespace + "-caption-link") || null
                }), a(e).find("img").attr("alt") === d && b._errorHandler("warning", "The `alt` attribute is missing on the " + c + "-indexed thumb, it's mandatory on <img> tags."), 
                a(e).attr("data-" + b._namespace + "-index", c)) : b._errorHandler("error", "Your link on the " + c + "-indexed thumb must have an `<img>` tag as a child.") : b._errorHandler("error", "The `href` attribute is missing on the " + c + "-indexed thumb, it's mandatory on `<a>` tags.");
            }), this.options.first >= this.props.thumbs.length && (this._errorHandler("error", "The `first` option must be between 0 and " + (this.props.thumbs.length - 1) + ". Default value is used."), 
            this.options.first = this._defaults.first, this.props.img.to_show = this._defaults.first), 
            b.props.is_transition_supported = b._supportsTransitions(), b._preloading(), b._wrapper(), 
            b.props.is_transition_supported === !0 && b.setEffect(b.options.effect), this.props.thumbs[this.props.img.to_show] !== d && b._showImage(), 
            b._events();
        },
        rebuild: function() {
            return this._init(), a(this.elem);
        },
        getThumbs: function(a) {
            var b;
            return b = a !== d ? this._isThumbExists(a) === !0 ? this.props.thumbs[a] : null : this.props.thumbs;
        },
        setEffect: function(a) {
            var b = {
                provider: null,
                name: null
            };
            return a !== d && null !== a.provider && null !== a.name ? this.props.effect.list.hasOwnProperty(a.provider) ? "random" === a.name ? (b.provider = a.provider, 
            b.name = this._getRandomEffect(a.provider)) : this.props.effect.list[a.provider].hasOwnProperty(a.name) ? (b.provider = a.provider, 
            b.name = a.name) : (b.provider = this._defaults.effect.provider, b.name = this._defaults.effect.name, 
            this._errorHandler("error", "Incorrect value for the `effect.name` option. Default value is used.")) : "none" === a ? b.name = "none" : (b.provider = this._defaults.effect.provider, 
            b.name = this._defaults.effect.name, this._errorHandler("error", "Incorrect value for the `effect.provider` option. Default value is used.")) : (b.provider = this._defaults.effect.provider, 
            b.name = this._defaults.effect.name, this._errorHandler("error", "Incorrect values for `effect.provider` and `effect.name` option. Default value is used.")), 
            this.props.effect.provider = b.provider, this.props.effect.name = b.name, b;
        },
        isPlaying: function() {
            return this.options.auto.start;
        },
        pause: function() {
            return a(this.options.thumbs).length > 1 && this.options.auto.start === !0 && this.props.img.timer && (this.options.auto.start = !1, 
            this._stopAnimation(), clearTimeout(this.props.img.timer), this.props.controls.$wrapper && this.props.controls.$wrapper.find('a[href="#pause"]').hide().parent().find('a[href="#play"]').show(), 
            this._triggerEvent("pause")), a(this.elem);
        },
        play: function() {
            return a(this.options.thumbs).length > 1 && (this.options.auto.start === !1 && (this.options.auto.start = !0, 
            this.goNext(!0), this.props.controls.$wrapper && this.props.controls.$wrapper.find('a[href="#play"]').hide().parent().find('a[href="#pause"]').show()), 
            this._triggerEvent("play")), a(this.elem);
        },
        goPrev: function(b) {
            if (a(this.options.thumbs).length > 1) {
                var c = this;
                b || this.options.auto.start !== !0 || this.pause(), this._hideOverlay(), this.props.img.to_show--, 
                this.props.img.to_show < 0 && (this.props.img.to_show = a(this.options.thumbs).length - 1), 
                this._hideImage(function() {
                    c._showImage();
                }), this._triggerEvent("prev");
            }
            return a(this.elem);
        },
        goNext: function(b) {
            if (a(this.options.thumbs).length > 1) {
                var c = this;
                b || this.options.auto.start !== !0 || this.pause(), this._hideOverlay(), this.props.img.to_show++, 
                this.props.img.to_show >= a(this.options.thumbs).length && (this.props.img.to_show = 0), 
                this._hideImage(function() {
                    c._showImage();
                }), this._triggerEvent("next");
            }
            return a(this.elem);
        },
        goTo: function(b) {
            if (a(this.options.thumbs).length > 1 && this._isThumbExists(b) === !0) {
                var c = this;
                this.options.auto.start === !0 && this.pause(), b !== this.props.img.to_show && (this._stopAnimation(), 
                this._hideOverlay(), c.props.img.to_show = b, this._hideImage(function() {
                    c._showImage();
                }));
            }
            return a(this.elem);
        },
        _supportsTransitions: function() {
            var a = c.body || c.documentElement, b = a.style, d = "transition", e = [ "Moz", "webkit", "Webkit", "Khtml", "O", "ms" ], f = 0;
            if ("string" == typeof b[d]) return !0;
            for (d = d.charAt(0).toUpperCase() + d.substr(1), f; f < e.length; f++) if ("string" == typeof b[e[f] + d]) return !0;
            return !1;
        },
        _isThumbExists: function(a) {
            var b;
            return "number" == typeof a && (this.props.thumbs[a] !== d ? b = !0 : (this._errorHandler("error", "The " + a + "-indexed thumb doesn't exist."), 
            b = !1)), b;
        },
        _preloading: function() {
            this.options.auto.load === !0 && a.each(this.props.thumbs, function(b, c) {
                a("<img>", {
                    src: c.src,
                    alt: c.alt
                }).hide().appendTo("body");
            });
        },
        _wrapper: function() {
            var b = a("<img>").attr("alt", this._name).addClass(this.options.imageClass);
            a(this.elem).html(b).wrapInner(a("<div>", {
                class: this._namespace + "-wrapper"
            })), this.props.img.$elem = a(this.elem).find("img:first");
        },
        _clearEffectClass: function() {
            var a, b, c = this;
            if (this.props.img.$elem.attr("class") !== d) {
                var e = this.props.img.$elem.attr("class").split(/\s+/);
                for (a in c.props.effect.list) if (c.props.effect.list.hasOwnProperty(a)) for (b in c.props.effect.list[a]) c.props.effect.list[a].hasOwnProperty(b) && (e.indexOf(c.props.effect.list[a][b]) !== -1 && this.props.img.$elem.removeClass(c.props.effect.list[a][b]), 
                c.props.effect.list[a][b].in && e.indexOf(c.props.effect.list[a][b].in) !== -1 && this.props.img.$elem.removeClass(c.props.effect.list[a][b].in), 
                c.props.effect.list[a][b].out && e.indexOf(c.props.effect.list[a][b].out) !== -1 && this.props.img.$elem.removeClass(c.props.effect.list[a][b].out));
            }
        },
        _getRandomEffect: function(a) {
            var b, c, d = 0;
            for (c in this.props.effect.list[a]) this.props.effect.list[a].hasOwnProperty(c) && "css" !== c && Math.random() < 1 / ++d && (b = c);
            return b;
        },
        _hasEffect: function() {
            return null !== this.props.effect.provider || "none" !== this.props.effect.name;
        },
        _showImage: function() {
            var b = this;
            null === this.props.plugin_status && this._errorHandler(), this._triggerEvent("imageShow"), 
            this.props.img.$elem.attr("src", this.props.thumbs[this.props.img.to_show].src).attr("alt", this.props.thumbs[this.props.img.to_show].alt).one("load", function() {
                b._hasEffect() === !1 ? (a(this).css("opacity", 1), b._overlay(), b._triggerEvent("imageShown")) : b.props.is_transition_supported === !0 ? a(this).removeClass(b.props.effect.list[b.props.effect.provider].css + " " + b.props.effect.list[b.props.effect.provider][b.props.effect.name].out).addClass(b.props.effect.list[b.props.effect.provider].css + " " + b.props.effect.list[b.props.effect.provider][b.props.effect.name].in).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
                    b._overlay(), b._triggerEvent("imageShown");
                }) : a(this).css("opacity", 0).animate({
                    opacity: 1
                }, 1e3, function() {
                    b._overlay(), b._triggerEvent("imageShown");
                }), b.options.auto.start === !0 && (b.props.img.timer = setTimeout(function() {
                    b.goNext(!0);
                }, b.options.interval < 1500 ? 1500 : b.options.interval));
            });
        },
        _hideImage: function(a) {
            var b = this;
            this._triggerEvent("imageHide"), this._hasEffect() === !1 ? (this.props.img.$elem.css("opacity", 0), 
            b._triggerEvent("imageHidden"), a && a()) : b.props.is_transition_supported === !0 ? (this._clearEffectClass(), 
            this.props.img.$elem.removeClass(this.props.effect.list[this.props.effect.provider].css + " " + this.props.effect.list[this.props.effect.provider][this.props.effect.name].in).addClass(this.props.effect.list[this.props.effect.provider].css + " " + this.props.effect.list[this.props.effect.provider][this.props.effect.name].out).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
                b._triggerEvent("imageHidden"), a && a();
            })) : this.props.img.$elem.animate({
                opacity: 0
            }, 1e3, function() {
                b._triggerEvent("imageHidden"), a && a();
            });
        },
        _overlay: function() {
            if ("none" !== this.options.overlay) {
                var b, c, d, e, f, g, h, i, j, k, l;
                b = this.props.img.$elem.position(), e = parseInt(this.props.img.$elem.css("border-left-width"), 10), 
                f = this.props.img.$elem.width() + 2 * e, g = this.props.img.$elem.height(), 0 === a(this.elem).find("." + this._namespace + "-overlay").length && a("<div>", {
                    class: this._namespace + "-overlay"
                }).appendTo(a(this.elem).find("." + this._namespace + "-wrapper")), this.props.img.$overlay = a(this.elem).find("." + this._namespace + "-overlay"), 
                h = parseInt(this.props.img.$overlay.css("padding-top"), 10), i = parseInt(this.props.img.$overlay.css("padding-bottom"), 10), 
                j = parseInt(this.props.img.$overlay.css("padding-left"), 10), k = parseInt(this.props.img.$overlay.css("padding-right"), 10), 
                l = parseInt(this.props.img.$overlay.css("height"), 10) - (j + k), l = parseInt(g, 10) - l - (h + i), 
                c = b.top + l + 2 * e, d = b.left, this.props.img.$overlay.css({
                    left: d + "px",
                    top: c + "px",
                    width: f + "px",
                    borderBottomLeftRadius: this.props.img.$elem.css("border-radius"),
                    borderBottomRightRadius: this.props.img.$elem.css("border-radius")
                }), "always" === this.options.overlay && this.props.img.$overlay.animate({
                    opacity: .7
                }, this._hasEffect() === !0 ? 500 : 0), this._caption(), this.options.controls.show === !0 && this.props.thumbs.length > 1 && this._controls();
            }
        },
        _hideOverlay: function() {
            null !== this.props.img.$overlay && this.props.img.$overlay.animate({
                opacity: 0
            }, this._hasEffect() === !0 ? 500 : 0);
        },
        _controls: function() {
            var b, c, d, e, f;
            a(this.elem).find("." + this._namespace + "-controls-wrapper").remove(), b = '<a class="' + this._namespace + '-controls prev" href="#prev"></a>', 
            c = '<a class="' + this._namespace + '-controls pause" href="#pause"></a>', d = '<a class="' + this._namespace + '-controls play" href="#play"></a>', 
            e = '<a class="' + this._namespace + '-controls next" href="#next"></a>', f = a("<div>", {
                class: this._namespace + "-controls-wrapper"
            }).append(b + c + d + e), this.props.img.$overlay.find("a:first").length > 0 ? f.appendTo(this.props.img.$overlay.find("a:first")) : f.appendTo(this.props.img.$overlay), 
            this.props.controls.$wrapper = a(this.elem).find("." + this._namespace + "-controls-wrapper"), 
            this.props.controls.$wrapper.length && (this.options.auto.start === !0 ? this.props.controls.$wrapper.find('a[href="#play"]').hide().parent().find('a[href="#pause"]').show() : this.props.controls.$wrapper.find('a[href="#pause"]').hide().parent().find('a[href="#play"]').show());
        },
        _caption: function() {
            if (null !== this.props.thumbs[this.props.img.to_show].caption_title) {
                var b, c, d, e, f, g;
                this.props.img.$overlay.html('<span class="' + this._namespace + '-caption-title">' + this.props.thumbs[this.props.img.to_show].caption_title + "</span>"), 
                c = this.props.img.$overlay.find("a:first").length > 0, d = null !== this.props.thumbs[this.props.img.to_show].caption_link, 
                b = '<a href="' + this.props.thumbs[this.props.img.to_show].caption_link + '" target="_blank"></a>', 
                c === !0 && d === !0 ? this.props.img.$overlay.find("a:first").attr("href", this.props.thumbs[this.props.img.to_show].caption_link) : c === !0 && d === !1 ? (e = this.props.img.$overlay.find("a:first"), 
                f = e.children().clone(), g = e.parent(), e.remove(), f.appendTo(g), this.props.img.$overlay.find("span:first").empty()) : c === !1 && d === !0 && a(this.elem).find("." + this._namespace + "-overlay span:first").wrap(b);
            }
        },
        _stopAnimation: function() {
            a(this.elem).stop();
        },
        _triggerEvent: function(b) {
            a(this.elem).triggerHandler(b + "." + this._namespace);
            var c = b.charAt(0).toUpperCase() + b.slice(1);
            this.options.events["on" + c] && this.options.events["on" + c](this.props.img.$elem);
        },
        _events: function() {
            var d = this;
            [ "click", "mouseover" ].indexOf(this.options.thumbEvent) !== -1 && (a(this.options.thumbs).on("click", function(b) {
                b.preventDefault(), "click" === d.options.thumbEvent && (d.goTo(a(this).data(d._namespace + "-index")), 
                d._triggerEvent("thumbClick"));
            }), a(this.options.thumbs).on("mouseover", function(b) {
                b.preventDefault(), "mouseover" === d.options.thumbEvent && (d.goTo(a(this).data(d._namespace + "-index")), 
                d._triggerEvent("thumbMouseOver"));
            })), this.props.img.$elem.on("click", function(a) {
                a.preventDefault(), d._triggerEvent("imageClick");
            }), a(this.elem).on("click", "." + this._namespace + "-controls-wrapper a", a(this.elem), function(b) {
                switch (b.preventDefault(), a(this).attr("href")) {
                  case "#prev":
                    d.goPrev();
                    break;

                  case "#pause":
                    d.pause();
                    break;

                  case "#play":
                    d.play();
                    break;

                  case "#next":
                    d.goNext();
                }
            }), a(this.elem).find("." + this._namespace + "-wrapper").on({
                mouseover: function() {
                    "hover" === d.options.overlay && null !== d.props.img.$overlay && d.props.img.$overlay.stop().animate({
                        opacity: .7
                    }, 400);
                },
                mouseleave: function() {
                    "hover" === d.options.overlay && null !== d.props.img.$overlay && d.props.img.$overlay.stop().animate({
                        opacity: 0
                    }, 400);
                }
            }), this.options.controls.keys === !0 && a(c).on("keydown", function(a) {
                switch (a.which) {
                  case 37:
                    d.goPrev();
                    break;

                  case 39:
                    d.goNext();
                    break;

                  case 32:
                    a.preventDefault(), d.options.auto.start === !0 ? d.pause() : d.play();
                }
            });
            var e = function() {
                var a = 0;
                return function(b, c) {
                    clearTimeout(a), a = setTimeout(b, c);
                };
            }();
            "none" !== this.options.overlay && a(b).bind("resize", function() {
                e(function() {
                    d._overlay();
                }, 100);
            });
        },
        _errorHandler: function(a, b) {
            switch (a) {
              case "error":
                console !== d && console.error(this._name + ": " + b + " Check out the documentation."), 
                this._triggerEvent("error"), this.props.plugin_status = a;
                break;

              case "warning":
                console !== d && console.warn(this._name + ": " + b), this._triggerEvent("warning"), 
                this.props.plugin_status = a;
                break;

              default:
                this._triggerEvent("success"), this.props.plugin_status = a;
            }
        }
    }, a.fn[f] = function(b) {
        var c, g, h = arguments;
        return b === d || "object" == typeof b ? g = this.each(function() {
            a.data(this, "plugin_" + f) || a.data(this, "plugin_" + f, new e(this, b));
        }) : "string" == typeof b && "_" !== b[0] ? (c = a.data(this[0], "plugin_" + f), 
        c[b] !== d && (g = c[b].apply(c, Array.prototype.slice.call(h, 1)))) : g = this.each(function() {
            c = a.data(this, "plugin_" + f), c instanceof e && "function" == typeof c[b] && c[b].apply(c, Array.prototype.slice.call(h, 1));
        }), g;
    };
}(jQuery, window, document), !function(a) {
    var b = {}, c = {
        mode: "horizontal",
        slideSelector: "",
        infiniteLoop: !0,
        hideControlOnEnd: !1,
        speed: 500,
        easing: null,
        slideMargin: 0,
        startSlide: 0,
        randomStart: !1,
        captions: !1,
        ticker: !1,
        tickerHover: !1,
        adaptiveHeight: !1,
        adaptiveHeightSpeed: 500,
        video: !1,
        useCSS: !0,
        preloadImages: "visible",
        responsive: !0,
        slideZIndex: 50,
        touchEnabled: !0,
        swipeThreshold: 50,
        oneToOneTouch: !0,
        preventDefaultSwipeX: !0,
        preventDefaultSwipeY: !1,
        pager: !0,
        pagerType: "full",
        pagerShortSeparator: " / ",
        pagerSelector: null,
        buildPager: null,
        pagerCustom: null,
        controls: !0,
        nextText: "Next",
        prevText: "Prev",
        nextSelector: null,
        prevSelector: null,
        autoControls: !1,
        startText: "Start",
        stopText: "Stop",
        autoControlsCombine: !1,
        autoControlsSelector: null,
        auto: !1,
        pause: 4e3,
        autoStart: !0,
        autoDirection: "next",
        autoHover: !1,
        autoDelay: 0,
        minSlides: 1,
        maxSlides: 1,
        moveSlides: 0,
        slideWidth: 0,
        onSliderLoad: function() {},
        onSlideBefore: function() {},
        onSlideAfter: function() {},
        onSlideNext: function() {},
        onSlidePrev: function() {},
        onSliderResize: function() {}
    };
    a.fn.bxSlider = function(d) {
        if (0 == this.length) return this;
        if (this.length > 1) return this.each(function() {
            a(this).bxSlider(d);
        }), this;
        var e = {}, f = this;
        b.el = this;
        var g = a(window).width(), h = a(window).height(), j = function() {
            e.settings = a.extend({}, c, d), e.settings.slideWidth = parseInt(e.settings.slideWidth), 
            e.children = f.children(e.settings.slideSelector), e.children.length < e.settings.minSlides && (e.settings.minSlides = e.children.length), 
            e.children.length < e.settings.maxSlides && (e.settings.maxSlides = e.children.length), 
            e.settings.randomStart && (e.settings.startSlide = Math.floor(Math.random() * e.children.length)), 
            e.active = {
                index: e.settings.startSlide
            }, e.carousel = e.settings.minSlides > 1 || e.settings.maxSlides > 1, e.carousel && (e.settings.preloadImages = "all"), 
            e.minThreshold = e.settings.minSlides * e.settings.slideWidth + (e.settings.minSlides - 1) * e.settings.slideMargin, 
            e.maxThreshold = e.settings.maxSlides * e.settings.slideWidth + (e.settings.maxSlides - 1) * e.settings.slideMargin, 
            e.working = !1, e.controls = {}, e.interval = null, e.animProp = "vertical" == e.settings.mode ? "top" : "left", 
            e.usingCSS = e.settings.useCSS && "fade" != e.settings.mode && function() {
                var a = document.createElement("div"), b = [ "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective" ];
                for (var c in b) if (void 0 !== a.style[b[c]]) return e.cssPrefix = b[c].replace("Perspective", "").toLowerCase(), 
                e.animProp = "-" + e.cssPrefix + "-transform", !0;
                return !1;
            }(), "vertical" == e.settings.mode && (e.settings.maxSlides = e.settings.minSlides), 
            f.data("origStyle", f.attr("style")), f.children(e.settings.slideSelector).each(function() {
                a(this).data("origStyle", a(this).attr("style"));
            }), k();
        }, k = function() {
            f.wrap('<div class="bx-wrapper"><div class="bx-viewport"></div></div>'), e.viewport = f.parent(), 
            e.loader = a('<div class="bx-loading" />'), e.viewport.prepend(e.loader), f.css({
                width: "horizontal" == e.settings.mode ? 100 * e.children.length + 215 + "%" : "auto",
                position: "relative"
            }), e.usingCSS && e.settings.easing ? f.css("-" + e.cssPrefix + "-transition-timing-function", e.settings.easing) : e.settings.easing || (e.settings.easing = "swing"), 
            q(), e.viewport.css({
                width: "100%",
                overflow: "hidden",
                position: "relative"
            }), e.viewport.parent().css({
                maxWidth: o()
            }), e.settings.pager || e.viewport.parent().css({
                margin: "0 auto 0px"
            }), e.children.css({
                float: "horizontal" == e.settings.mode ? "left" : "none",
                listStyle: "none",
                position: "relative"
            }), e.children.css("width", p()), "horizontal" == e.settings.mode && e.settings.slideMargin > 0 && e.children.css("marginRight", e.settings.slideMargin), 
            "vertical" == e.settings.mode && e.settings.slideMargin > 0 && e.children.css("marginBottom", e.settings.slideMargin), 
            "fade" == e.settings.mode && (e.children.css({
                position: "absolute",
                zIndex: 0,
                display: "none"
            }), e.children.eq(e.settings.startSlide).css({
                zIndex: e.settings.slideZIndex,
                display: "block"
            })), e.controls.el = a('<div class="bx-controls" />'), e.settings.captions && z(), 
            e.active.last = e.settings.startSlide == r() - 1, e.settings.video && f.fitVids();
            var b = e.children.eq(e.settings.startSlide);
            "all" == e.settings.preloadImages && (b = e.children), e.settings.ticker ? e.settings.pager = !1 : (e.settings.pager && w(), 
            e.settings.controls && x(), e.settings.auto && e.settings.autoControls && y(), (e.settings.controls || e.settings.autoControls || e.settings.pager) && e.viewport.after(e.controls.el)), 
            l(b, m);
        }, l = function(b, c) {
            var d = b.find("img, iframe").length;
            if (0 == d) return void c();
            var e = 0;
            b.find("img, iframe").each(function() {
                a(this).one("load", function() {
                    ++e == d && c();
                }).each(function() {
                    this.complete && a(this).load();
                });
            });
        }, m = function() {
            if (e.settings.infiniteLoop && "fade" != e.settings.mode && !e.settings.ticker) {
                var b = "vertical" == e.settings.mode ? e.settings.minSlides : e.settings.maxSlides, c = e.children.slice(0, b).clone().addClass("bx-clone"), d = e.children.slice(-b).clone().addClass("bx-clone");
                f.append(c).prepend(d);
            }
            e.loader.remove(), t(), "vertical" == e.settings.mode && (e.settings.adaptiveHeight = !0), 
            e.viewport.height(n()), f.redrawSlider(), e.settings.onSliderLoad(e.active.index), 
            e.initialized = !0, e.settings.responsive && a(window).bind("resize", Q), e.settings.auto && e.settings.autoStart && J(), 
            e.settings.ticker && K(), e.settings.pager && F(e.settings.startSlide), e.settings.controls && I(), 
            e.settings.touchEnabled && !e.settings.ticker && M();
        }, n = function() {
            var b = 0, c = a();
            if ("vertical" == e.settings.mode || e.settings.adaptiveHeight) if (e.carousel) {
                var d = 1 == e.settings.moveSlides ? e.active.index : e.active.index * s();
                for (c = e.children.eq(d), i = 1; i <= e.settings.maxSlides - 1; i++) c = d + i >= e.children.length ? c.add(e.children.eq(i - 1)) : c.add(e.children.eq(d + i));
            } else c = e.children.eq(e.active.index); else c = e.children;
            return "vertical" == e.settings.mode ? (c.each(function() {
                b += a(this).outerHeight();
            }), e.settings.slideMargin > 0 && (b += e.settings.slideMargin * (e.settings.minSlides - 1))) : b = Math.max.apply(Math, c.map(function() {
                return a(this).outerHeight(!1);
            }).get()), b;
        }, o = function() {
            var a = "100%";
            return e.settings.slideWidth > 0 && (a = "horizontal" == e.settings.mode ? e.settings.maxSlides * e.settings.slideWidth + (e.settings.maxSlides - 1) * e.settings.slideMargin : e.settings.slideWidth), 
            a;
        }, p = function() {
            var a = e.settings.slideWidth, b = e.viewport.width();
            return 0 == e.settings.slideWidth || e.settings.slideWidth > b && !e.carousel || "vertical" == e.settings.mode ? a = b : e.settings.maxSlides > 1 && "horizontal" == e.settings.mode && (b > e.maxThreshold || b < e.minThreshold && (a = (b - e.settings.slideMargin * (e.settings.minSlides - 1)) / e.settings.minSlides)), 
            a;
        }, q = function() {
            var a = 1;
            if ("horizontal" == e.settings.mode && e.settings.slideWidth > 0) if (e.viewport.width() < e.minThreshold) a = e.settings.minSlides; else if (e.viewport.width() > e.maxThreshold) a = e.settings.maxSlides; else {
                var b = e.children.first().width();
                a = Math.floor(e.viewport.width() / b);
            } else "vertical" == e.settings.mode && (a = e.settings.minSlides);
            return a;
        }, r = function() {
            var a = 0;
            if (e.settings.moveSlides > 0) if (e.settings.infiniteLoop) a = e.children.length / s(); else for (var b = 0, c = 0; b < e.children.length; ) ++a, 
            b = c + q(), c += e.settings.moveSlides <= q() ? e.settings.moveSlides : q(); else a = Math.ceil(e.children.length / q());
            return a;
        }, s = function() {
            return e.settings.moveSlides > 0 && e.settings.moveSlides <= q() ? e.settings.moveSlides : q();
        }, t = function() {
            if (e.children.length > e.settings.maxSlides && e.active.last && !e.settings.infiniteLoop) {
                if ("horizontal" == e.settings.mode) {
                    var a = e.children.last(), b = a.position();
                    u(-(b.left - (e.viewport.width() - a.width())), "reset", 0);
                } else if ("vertical" == e.settings.mode) {
                    var c = e.children.length - e.settings.minSlides, b = e.children.eq(c).position();
                    u(-b.top, "reset", 0);
                }
            } else {
                var b = e.children.eq(e.active.index * s()).position();
                e.active.index == r() - 1 && (e.active.last = !0), void 0 != b && ("horizontal" == e.settings.mode ? u(-b.left, "reset", 0) : "vertical" == e.settings.mode && u(-b.top, "reset", 0));
            }
        }, u = function(a, b, c, d) {
            if (e.usingCSS) {
                var g = "vertical" == e.settings.mode ? "translate3d(0, " + a + "px, 0)" : "translate3d(" + a + "px, 0, 0)";
                f.css("-" + e.cssPrefix + "-transition-duration", c / 1e3 + "s"), "slide" == b ? (f.css(e.animProp, g), 
                f.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    f.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), G();
                })) : "reset" == b ? f.css(e.animProp, g) : "ticker" == b && (f.css("-" + e.cssPrefix + "-transition-timing-function", "linear"), 
                f.css(e.animProp, g), f.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    f.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), u(d.resetValue, "reset", 0), 
                    L();
                }));
            } else {
                var h = {};
                h[e.animProp] = a, "slide" == b ? f.animate(h, c, e.settings.easing, function() {
                    G();
                }) : "reset" == b ? f.css(e.animProp, a) : "ticker" == b && f.animate(h, speed, "linear", function() {
                    u(d.resetValue, "reset", 0), L();
                });
            }
        }, v = function() {
            for (var b = "", c = r(), d = 0; c > d; d++) {
                var f = "";
                e.settings.buildPager && a.isFunction(e.settings.buildPager) ? (f = e.settings.buildPager(d), 
                e.pagerEl.addClass("bx-custom-pager")) : (f = d + 1, e.pagerEl.addClass("bx-default-pager")), 
                b += '<div class="bx-pager-item"><a href="" data-slide-index="' + d + '" class="bx-pager-link">' + f + "</a></div>";
            }
            e.pagerEl.html(b);
        }, w = function() {
            e.settings.pagerCustom ? e.pagerEl = a(e.settings.pagerCustom) : (e.pagerEl = a('<div class="bx-pager" />'), 
            e.settings.pagerSelector ? a(e.settings.pagerSelector).html(e.pagerEl) : e.controls.el.addClass("bx-has-pager").append(e.pagerEl), 
            v()), e.pagerEl.on("click", "a", E);
        }, x = function() {
            e.controls.next = a('<a class="bx-next" href="">' + e.settings.nextText + "</a>"), 
            e.controls.prev = a('<a class="bx-prev" href="">' + e.settings.prevText + "</a>"), 
            e.controls.next.bind("click", A), e.controls.prev.bind("click", B), e.settings.nextSelector && a(e.settings.nextSelector).append(e.controls.next), 
            e.settings.prevSelector && a(e.settings.prevSelector).append(e.controls.prev), e.settings.nextSelector || e.settings.prevSelector || (e.controls.directionEl = a('<div class="bx-controls-direction" />'), 
            e.controls.directionEl.append(e.controls.prev).append(e.controls.next), e.controls.el.addClass("bx-has-controls-direction").append(e.controls.directionEl));
        }, y = function() {
            e.controls.start = a('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + e.settings.startText + "</a></div>"), 
            e.controls.stop = a('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + e.settings.stopText + "</a></div>"), 
            e.controls.autoEl = a('<div class="bx-controls-auto" />'), e.controls.autoEl.on("click", ".bx-start", C), 
            e.controls.autoEl.on("click", ".bx-stop", D), e.settings.autoControlsCombine ? e.controls.autoEl.append(e.controls.start) : e.controls.autoEl.append(e.controls.start).append(e.controls.stop), 
            e.settings.autoControlsSelector ? a(e.settings.autoControlsSelector).html(e.controls.autoEl) : e.controls.el.addClass("bx-has-controls-auto").append(e.controls.autoEl), 
            H(e.settings.autoStart ? "stop" : "start");
        }, z = function() {
            e.children.each(function() {
                var b = a(this).find("img:first").attr("title");
                void 0 != b && ("" + b).length && a(this).append('<div class="bx-caption"><span>' + b + "</span></div>");
            });
        }, A = function(a) {
            e.settings.auto && f.stopAuto(), f.goToNextSlide(), a.preventDefault();
        }, B = function(a) {
            e.settings.auto && f.stopAuto(), f.goToPrevSlide(), a.preventDefault();
        }, C = function(a) {
            f.startAuto(), a.preventDefault();
        }, D = function(a) {
            f.stopAuto(), a.preventDefault();
        }, E = function(b) {
            e.settings.auto && f.stopAuto();
            var c = a(b.currentTarget), d = parseInt(c.attr("data-slide-index"));
            d != e.active.index && f.goToSlide(d), b.preventDefault();
        }, F = function(b) {
            var c = e.children.length;
            return "short" == e.settings.pagerType ? (e.settings.maxSlides > 1 && (c = Math.ceil(e.children.length / e.settings.maxSlides)), 
            void e.pagerEl.html(b + 1 + e.settings.pagerShortSeparator + c)) : (e.pagerEl.find("a").removeClass("active"), 
            void e.pagerEl.each(function(c, d) {
                a(d).find("a").eq(b).addClass("active");
            }));
        }, G = function() {
            if (e.settings.infiniteLoop) {
                var a = "";
                0 == e.active.index ? a = e.children.eq(0).position() : e.active.index == r() - 1 && e.carousel ? a = e.children.eq((r() - 1) * s()).position() : e.active.index == e.children.length - 1 && (a = e.children.eq(e.children.length - 1).position()), 
                a && ("horizontal" == e.settings.mode ? u(-a.left, "reset", 0) : "vertical" == e.settings.mode && u(-a.top, "reset", 0));
            }
            e.working = !1, e.settings.onSlideAfter(e.children.eq(e.active.index), e.oldIndex, e.active.index);
        }, H = function(a) {
            e.settings.autoControlsCombine ? e.controls.autoEl.html(e.controls[a]) : (e.controls.autoEl.find("a").removeClass("active"), 
            e.controls.autoEl.find("a:not(.bx-" + a + ")").addClass("active"));
        }, I = function() {
            1 == r() ? (e.controls.prev.addClass("disabled"), e.controls.next.addClass("disabled")) : !e.settings.infiniteLoop && e.settings.hideControlOnEnd && (0 == e.active.index ? (e.controls.prev.addClass("disabled"), 
            e.controls.next.removeClass("disabled")) : e.active.index == r() - 1 ? (e.controls.next.addClass("disabled"), 
            e.controls.prev.removeClass("disabled")) : (e.controls.prev.removeClass("disabled"), 
            e.controls.next.removeClass("disabled")));
        }, J = function() {
            e.settings.autoDelay > 0 ? setTimeout(f.startAuto, e.settings.autoDelay) : f.startAuto(), 
            e.settings.autoHover && f.hover(function() {
                e.interval && (f.stopAuto(!0), e.autoPaused = !0);
            }, function() {
                e.autoPaused && (f.startAuto(!0), e.autoPaused = null);
            });
        }, K = function() {
            var b = 0;
            if ("next" == e.settings.autoDirection) f.append(e.children.clone().addClass("bx-clone")); else {
                f.prepend(e.children.clone().addClass("bx-clone"));
                var c = e.children.first().position();
                b = "horizontal" == e.settings.mode ? -c.left : -c.top;
            }
            u(b, "reset", 0), e.settings.pager = !1, e.settings.controls = !1, e.settings.autoControls = !1, 
            e.settings.tickerHover && !e.usingCSS && e.viewport.hover(function() {
                f.stop();
            }, function() {
                var b = 0;
                e.children.each(function() {
                    b += "horizontal" == e.settings.mode ? a(this).outerWidth(!0) : a(this).outerHeight(!0);
                });
                var c = e.settings.speed / b, d = "horizontal" == e.settings.mode ? "left" : "top", g = c * (b - Math.abs(parseInt(f.css(d))));
                L(g);
            }), L();
        }, L = function(a) {
            speed = a ? a : e.settings.speed;
            var b = {
                left: 0,
                top: 0
            }, c = {
                left: 0,
                top: 0
            };
            "next" == e.settings.autoDirection ? b = f.find(".bx-clone").first().position() : c = e.children.first().position();
            var d = "horizontal" == e.settings.mode ? -b.left : -b.top, g = "horizontal" == e.settings.mode ? -c.left : -c.top, h = {
                resetValue: g
            };
            u(d, "ticker", speed, h);
        }, M = function() {
            e.touch = {
                start: {
                    x: 0,
                    y: 0
                },
                end: {
                    x: 0,
                    y: 0
                }
            }, e.viewport.bind("touchstart", N);
        }, N = function(a) {
            if (e.working) a.preventDefault(); else {
                e.touch.originalPos = f.position();
                var b = a.originalEvent;
                e.touch.start.x = b.changedTouches[0].pageX, e.touch.start.y = b.changedTouches[0].pageY, 
                e.viewport.bind("touchmove", O), e.viewport.bind("touchend", P);
            }
        }, O = function(a) {
            var b = a.originalEvent, c = Math.abs(b.changedTouches[0].pageX - e.touch.start.x), d = Math.abs(b.changedTouches[0].pageY - e.touch.start.y);
            if (3 * c > d && e.settings.preventDefaultSwipeX ? a.preventDefault() : 3 * d > c && e.settings.preventDefaultSwipeY && a.preventDefault(), 
            "fade" != e.settings.mode && e.settings.oneToOneTouch) {
                var f = 0;
                if ("horizontal" == e.settings.mode) {
                    var g = b.changedTouches[0].pageX - e.touch.start.x;
                    f = e.touch.originalPos.left + g;
                } else {
                    var g = b.changedTouches[0].pageY - e.touch.start.y;
                    f = e.touch.originalPos.top + g;
                }
                u(f, "reset", 0);
            }
        }, P = function(a) {
            e.viewport.unbind("touchmove", O);
            var b = a.originalEvent, c = 0;
            if (e.touch.end.x = b.changedTouches[0].pageX, e.touch.end.y = b.changedTouches[0].pageY, 
            "fade" == e.settings.mode) {
                var d = Math.abs(e.touch.start.x - e.touch.end.x);
                d >= e.settings.swipeThreshold && (e.touch.start.x > e.touch.end.x ? f.goToNextSlide() : f.goToPrevSlide(), 
                f.stopAuto());
            } else {
                var d = 0;
                "horizontal" == e.settings.mode ? (d = e.touch.end.x - e.touch.start.x, c = e.touch.originalPos.left) : (d = e.touch.end.y - e.touch.start.y, 
                c = e.touch.originalPos.top), !e.settings.infiniteLoop && (0 == e.active.index && d > 0 || e.active.last && 0 > d) ? u(c, "reset", 200) : Math.abs(d) >= e.settings.swipeThreshold ? (0 > d ? f.goToNextSlide() : f.goToPrevSlide(), 
                f.stopAuto()) : u(c, "reset", 200);
            }
            e.viewport.unbind("touchend", P);
        }, Q = function() {
            var b = a(window).width(), c = a(window).height();
            (g != b || h != c) && (g = b, h = c, f.redrawSlider(), e.settings.onSliderResize.call(f, e.active.index));
        };
        return f.goToSlide = function(b, c) {
            if (!e.working && e.active.index != b) if (e.working = !0, e.oldIndex = e.active.index, 
            e.active.index = 0 > b ? r() - 1 : b >= r() ? 0 : b, e.settings.onSlideBefore(e.children.eq(e.active.index), e.oldIndex, e.active.index), 
            "next" == c ? e.settings.onSlideNext(e.children.eq(e.active.index), e.oldIndex, e.active.index) : "prev" == c && e.settings.onSlidePrev(e.children.eq(e.active.index), e.oldIndex, e.active.index), 
            e.active.last = e.active.index >= r() - 1, e.settings.pager && F(e.active.index), 
            e.settings.controls && I(), "fade" == e.settings.mode) e.settings.adaptiveHeight && e.viewport.height() != n() && e.viewport.animate({
                height: n()
            }, e.settings.adaptiveHeightSpeed), e.children.filter(":visible").fadeOut(e.settings.speed).css({
                zIndex: 0
            }), e.children.eq(e.active.index).css("zIndex", e.settings.slideZIndex + 1).fadeIn(e.settings.speed, function() {
                a(this).css("zIndex", e.settings.slideZIndex), G();
            }); else {
                e.settings.adaptiveHeight && e.viewport.height() != n() && e.viewport.animate({
                    height: n()
                }, e.settings.adaptiveHeightSpeed);
                var d = 0, g = {
                    left: 0,
                    top: 0
                };
                if (!e.settings.infiniteLoop && e.carousel && e.active.last) if ("horizontal" == e.settings.mode) {
                    var h = e.children.eq(e.children.length - 1);
                    g = h.position(), d = e.viewport.width() - h.outerWidth();
                } else {
                    var i = e.children.length - e.settings.minSlides;
                    g = e.children.eq(i).position();
                } else if (e.carousel && e.active.last && "prev" == c) {
                    var j = 1 == e.settings.moveSlides ? e.settings.maxSlides - s() : (r() - 1) * s() - (e.children.length - e.settings.maxSlides), h = f.children(".bx-clone").eq(j);
                    g = h.position();
                } else if ("next" == c && 0 == e.active.index) g = f.find("> .bx-clone").eq(e.settings.maxSlides).position(), 
                e.active.last = !1; else if (b >= 0) {
                    var k = b * s();
                    g = e.children.eq(k).position();
                }
                if ("undefined" != typeof g) {
                    var l = "horizontal" == e.settings.mode ? -(g.left - d) : -g.top;
                    u(l, "slide", e.settings.speed);
                }
            }
        }, f.goToNextSlide = function() {
            if (e.settings.infiniteLoop || !e.active.last) {
                var a = parseInt(e.active.index) + 1;
                f.goToSlide(a, "next");
            }
        }, f.goToPrevSlide = function() {
            if (e.settings.infiniteLoop || 0 != e.active.index) {
                var a = parseInt(e.active.index) - 1;
                f.goToSlide(a, "prev");
            }
        }, f.startAuto = function(a) {
            e.interval || (e.interval = setInterval(function() {
                "next" == e.settings.autoDirection ? f.goToNextSlide() : f.goToPrevSlide();
            }, e.settings.pause), e.settings.autoControls && 1 != a && H("stop"));
        }, f.stopAuto = function(a) {
            e.interval && (clearInterval(e.interval), e.interval = null, e.settings.autoControls && 1 != a && H("start"));
        }, f.getCurrentSlide = function() {
            return e.active.index;
        }, f.getCurrentSlideElement = function() {
            return e.children.eq(e.active.index);
        }, f.getSlideCount = function() {
            return e.children.length;
        }, f.redrawSlider = function() {
            e.children.add(f.find(".bx-clone")).outerWidth(p()), e.viewport.css("height", n()), 
            e.settings.ticker || t(), e.active.last && (e.active.index = r() - 1), e.active.index >= r() && (e.active.last = !0), 
            e.settings.pager && !e.settings.pagerCustom && (v(), F(e.active.index));
        }, f.destroySlider = function() {
            e.initialized && (e.initialized = !1, a(".bx-clone", this).remove(), e.children.each(function() {
                void 0 != a(this).data("origStyle") ? a(this).attr("style", a(this).data("origStyle")) : a(this).removeAttr("style");
            }), void 0 != a(this).data("origStyle") ? this.attr("style", a(this).data("origStyle")) : a(this).removeAttr("style"), 
            a(this).unwrap().unwrap(), e.controls.el && e.controls.el.remove(), e.controls.next && e.controls.next.remove(), 
            e.controls.prev && e.controls.prev.remove(), e.pagerEl && e.settings.controls && e.pagerEl.remove(), 
            a(".bx-caption", this).remove(), e.controls.autoEl && e.controls.autoEl.remove(), 
            clearInterval(e.interval), e.settings.responsive && a(window).unbind("resize", Q));
        }, f.reloadSlider = function(a) {
            void 0 != a && (d = a), f.destroySlider(), j();
        }, j(), this;
    };
}(jQuery);